// Code generated by MockGen. DO NOT EDIT.
// Source: astrolog/internal/service (interfaces: Repo)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "astrolog/internal/model"
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// CreateImage mocks base method.
func (m *MockRepo) CreateImage(arg0 context.Context, arg1 model.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateImage", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateImage indicates an expected call of CreateImage.
func (mr *MockRepoMockRecorder) CreateImage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateImage", reflect.TypeOf((*MockRepo)(nil).CreateImage), arg0, arg1)
}

// GetImageByDay mocks base method.
func (m *MockRepo) GetImageByDay(arg0 context.Context, arg1 time.Time) (model.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImageByDay", arg0, arg1)
	ret0, _ := ret[0].(model.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImageByDay indicates an expected call of GetImageByDay.
func (mr *MockRepoMockRecorder) GetImageByDay(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImageByDay", reflect.TypeOf((*MockRepo)(nil).GetImageByDay), arg0, arg1)
}

// GetImages mocks base method.
func (m *MockRepo) GetImages(arg0 context.Context) ([]model.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImages", arg0)
	ret0, _ := ret[0].([]model.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImages indicates an expected call of GetImages.
func (mr *MockRepoMockRecorder) GetImages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImages", reflect.TypeOf((*MockRepo)(nil).GetImages), arg0)
}
